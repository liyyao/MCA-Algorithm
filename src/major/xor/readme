异或运算
概述：相同为0，不同为1
     无进位相加

性质：
    0 ^ N = N
    N ^ N = 0
    a ^ b = b ^ a
    (a ^ b) ^ c = a ^ (b ^ c)

应用：
1.不用额外变量交换两个数
    a = a ^ b;
    b = a ^ b;
    a = a ^ b;

    以上交换如果a和b引用的是同一块内存地址的值，交换是有问题的，比如arr[i]和arr[j]交换，如果i = j，按上述方式交换完成后，arr[i] == arr[j] == 0了
    在java开发中就老实的添加一个额外变量进行交换即可，上面的大部分是面试官为了面试装b用的

2.一个数组中有一种数出现了奇数次，其他数都出现了偶数次，怎么找到并打印这种数
    第一想到的是用一个hash表，将每个数出现的次数记录下来，然后再遍历hash表，不管面试还是开发中这样写都不好

3.怎么把一个int类型的数，提取出最右侧的1来
    a & (-a) 等价于 a & (~a + 1)，因为-a = ~a+1

4.一个数组中有两种数出现了奇数次，其他数都出现了偶数次，怎么找到并打印这两种数

5.一个数组中有一种数出现k次，其他数都出现了M次，M > 1, k < M，找到出现了k次的数，要求额外空间复杂度O(1)，时间复杂度O(N)


=======================
与运算
m % n = m & (n - 1) (前提是n是2的幂次方)
























